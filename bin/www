#!/usr/bin/env node
const chalk = require('chalk');

const server = require('../server');

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  const addr = server.address();
  const bind = typeof addr.port === 'string' ? `Pipe ${addr.port}` : `Port ${addr.port}`;

  switch (error.code) {
    case 'EACCES':
      console.error(`${bind} requires elevated privileges`);
      break;
    case 'EADDRINUSE':
      console.error(`${bind} is already in use`);
      break;
    default:
      throw error;
  }

  process.exit(1);
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  const addr = server.address();
  const bind = typeof addr === 'string' ? `pipe ${addr}` : `port ${addr.port}`;
  // eslint-disable-next-line no-console
  console.log(chalk.italic.green(`Listening on ${bind}`));
}

/**
 * Listen on provided port, on all network interfaces.
 */

server.on('error', onError);
server.on('listening', onListening);
